DNS

as of 1.3 DNS is a built in service and is launched automatically using the addon manager.

  - The addons are int he /etc/kubernetes/addons directory on the master node.

The DNS service can be used within pods to find other services running on the same cluster.

Multiple containers within 1 pod don't need this service, as they can contact each other directly.

  - A container in the same pod can connect to the port of the other container directly
  using localhost:port

If you want to use a web service to access a resource (db) in another pod, you will need
service discovery.

To make DNS work, a pod will need a Service Definition.

DNS discovery only works in the same namespace.

the commands

host app1 service
 - will return the ip addr

 host app2 service
  - will return the ip addr of the second pod/container/app.

If in a different namespace.

host app2 service.<namespace>

for the full hostname...

host app2 service.<namespace>.svc.cluster.local

See the slides in the video...

Demo
====

cat service-discovery/secrets.yml

apiVersion: v1
kind: Secret
metadata:
  name: helloworld-secrets
type: Opaque
data:
  username: aGVsbG93b3JsZA==
  password: cGFzc3dvcmQ=
  rootPassword: cm9vdHBhc3N3b3Jk
  database: aGVsbG93b3JsZA==

cat service-discovery/database.yml

apiVersion: v1
kind: Pod
metadata:
name: database
labels:
  app: database
spec:
containers:
- name: mysql
  image: mysql:5.7
  ports:
  - name: mysql-port
    containerPort: 3306
  env:
    - name: MYSQL_ROOT_PASSWORD
      valueFrom:
        secretKeyRef:
          name: helloworld-secrets
          key: rootPassword
    - name: MYSQL_USER
      valueFrom:
        secretKeyRef:
          name: helloworld-secrets
          key: username
    - name: MYSQL_PASSWORD
      valueFrom:
        secretKeyRef:
          name: helloworld-secrets
          key: password
    - name: MYSQL_DATABASE
      valueFrom:
        secretKeyRef:
          name: helloworld-secrets
          key: database

# ***************************************************************************S
cat service-discovery/database-service.yml

apiVersion: v1
kind: Service
metadata:
  name: database-service
spec:
  ports:
  - port: 3306
    protocol: TCP
  selector:
    app: database
  type: NodePort


kubectl create -f service-discovery/database.yml
pod "database" created

kubectl create -f service-discovery/database-service.yml
service "database-service" created


cat service-discovery/helloworld-db.yml

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: helloworld-deployment
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: helloworld-db
    spec:
      containers:
      - name: k8s-test
        image: wonchaitanya/k8s-test
        command: ["node", "index-db.js"]
        ports:
        - name: nodejs-port
          containerPort: 3000
        env:
          - name: MYSQL_HOST
            value: database-service
          - name: MYSQL_USER
            value: root
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: helloworld-secrets
                key: rootPassword
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: helloworld-secrets
                key: database

kubectl create -f service-discovery/helloworld-db.yml
deployment "helloworld-deployment" created

kubectl create -f service-discovery/helloworld-db-service.yml
service "helloworld-db-service" created

cat service-discovery/helloworld-db-service.yml

apiVersion: v1
kind: Service
metadata:
  name: helloworld-db-service
spec:
  ports:
  - port: 3000
    protocol: TCP
  selector:
    app: helloworld-db
  type: NodePort


minikube service helloworld-db-service --url
http://192.168.99.100:32260

kubectl get pods
NAME                                     READY     STATUS    RESTARTS   AGE
database                                 1/1       Running   0          7m
helloworld-deployment-54dfb95d8c-857mx   1/1       Running   0          3m
helloworld-deployment-54dfb95d8c-jdppj   1/1       Running   0          3m
helloworld-deployment-54dfb95d8c-w76wq   1/1       Running   0          3m

kubectl logs  helloworld-deployment-54dfb95d8c-857mx


kubectl logs  helloworld-deployment-54dfb95d8c-857mx
Example app listening at http://:::3000
Connection to db established

Jamess-MBP-2:kubernetes-course JeepGuy$ curl http://192.168.99.100:32260
Hello World! You are visitor number 1Jamess-MBP-2:kubernetes-course JeepGuy$
Jamess-MBP-2:kubernetes-course JeepGuy$ curl http://192.168.99.100:32260
Hello World! You are visitor number 2Jamess-MBP-2:kubernetes-course JeepGuy$ curl http://192.168.99.100:32260
Hello World! You are visitor number 3Jamess-MBP-2:kubernetes-course JeepGuy$

kubectl exec database -i -t -- mysql -u root -p
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 6
Server version: 5.7.20 MySQL Community Server (GPL)

Copyright (c) 2000, 2017, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql>

mysql> show databases
    -> ;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| helloworld         |
| mysql              |
| performance_schema |
| sys                |
+--------------------+
5 rows in set (0.00 sec)

mysql> use helloworld
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql> show tables
    -> ;
+----------------------+
| Tables_in_helloworld |
+----------------------+
| visits               |
+----------------------+
1 row in set (0.00 sec)

mysql> select * from visits;
+----+---------------+
| id | ts            |
+----+---------------+
|  1 | 1514599818586 |
|  2 | 1514599830710 |
|  3 | 1514599832789 |
+----+---------------+
3 rows in set (0.00 sec)


kubectl run -i --tty busybox --image=busybox --restart=Never -- sh
If you don't see a command prompt, try pressing enter.
/ # nslookup
BusyBox v1.27.2 (2017-11-01 22:58:00 UTC) multi-call binary.

Usage: nslookup [HOST] [SERVER]

Query the nameserver for the IP address of the given HOST
optionally using a specified DNS server
/ # nslookup helloworld-db-service
Server:    10.0.0.10
Address 1: 10.0.0.10 kube-dns.kube-system.svc.cluster.local

Name:      helloworld-db-service
Address 1: 10.0.0.92 helloworld-db-service.default.svc.cluster.local
/ #


kubectl run -i --tty busybox --image=busybox --restart=Never -- sh
If you don't see a command prompt, try pressing enter.
/ # nslookup
BusyBox v1.27.2 (2017-11-01 22:58:00 UTC) multi-call binary.

Usage: nslookup [HOST] [SERVER]

Query the nameserver for the IP address of the given HOST
optionally using a specified DNS server
/ # nslookup helloworld-db-service
Server:    10.0.0.10
Address 1: 10.0.0.10 kube-dns.kube-system.svc.cluster.local

Name:      helloworld-db-service
Address 1: 10.0.0.92 helloworld-db-service.default.svc.cluster.local
/ #

> Name:      helloworld-db-service
> Address 1: 10.0.0.92 helloworld-db-service.default.svc.cluster.local
> / #
>
>
> telnet helloworld-bdb-service 3000
> get /
> GET /
> ^C
> GET /
> telnet helloworld-db-service 3000
> GET /
> ^C
> sh: syntax error: unterminated quoted string
/ # pwd
/
/ # Jamess-MBP-2:kubernetes-course JeepGuy$ kubectl get service
NAME                    TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)          AGE
database-service        NodePort    10.0.0.221   <none>        3306:31674/TCP   1h
helloworld-db-service   NodePort    10.0.0.92    <none>        3000:32260/TCP   1h
kubernetes              ClusterIP   10.0.0.1     <none>        443/TCP          6d
Jamess-MBP-2:kubernetes-course JeepGuy$ kubectl delete pod busybox
pod "busybox" deleted
Jamess-MBP-2:kubernetes-course JeepGuy$

GET /

HTTP/1.1 200 OK
X-Powered-By: Express
Content-Type: text/html; charset=utf-8
Content-Length: 37
ETag: W/"25-ddKUbVwbciQyp9JUeBUrkA"
Date: Sat, 30 Dec 2017 03:17:48 GMT
Connection: close

Hello World! You are visitor number 4Connection closed by foreign host






...
