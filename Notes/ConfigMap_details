Details for memorization

kubectl get configmap nginx-config -o yaml

apiVersion: v1
data:
  reverseproxy.conf: |
    server {
        listen       80;
        server_name  localhost;

        location / {
            proxy_bind 127.0.0.1;
            proxy_pass http://127.0.0.1:3000;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }

kind: ConfigMap
metadata:
  creationTimestamp: 2017-12-30T15:24:26Z
  name: nginx-config
  namespace: default
  resourceVersion: "229515"
  selfLink: /api/v1/namespaces/default/configmaps/nginx-config
  uid: 85997ecd-ed75-11e7-9ced-080027875e97

cat configmap/nginx.yml

apiVersion: v1
kind: Pod
metadata:
  name: helloworld-nginx
  labels:
    app: helloworld-nginx
spec:
  containers:
  - name: nginx
    image: nginx:1.11
    ports:
    - containerPort: 80
    volumeMounts:        ################## Inside the container
    - name: config-volume
      mountPath: /etc/nginx/conf.d     #### The values will be stored in files in the container
  - name: k8s-test
    image: wonchaitanya/k8s-test
    ports:
    - containerPort: 3000
  volumes:                   ############ The volume itself just refers to the configMap
    - name: config-volume
      configMap:
        name: nginx-config
        items:
        - key: reverseproxy.conf
          path: reverseproxy.conf


SAME Example that exposes the configmap as environment variab.es:


apiVersion: v1
kind: Pod
metadata:
  name: helloworld-nginx
  labels:
    app: helloworld-nginx
spec:
  containers:
  - name: nginx
    image: nginx:1.11
    ports:
    - containerPort: 80
    env:                    ############# exposes the same configMap as env vars.
    - name: k8s-test
     valueFrom:
      configMapKeyRef:
       name: app-config
       key: driver
      - name: DATABASE
###################################
  The original configMap:
data:
  reverseproxy.conf: |
    server {
        listen       80;
        server_name  localhost;

        location / {
            proxy_bind 127.0.0.1;
            proxy_pass http://127.0.0.1:3000;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
